name: Django workflow

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        with:
          - python-version: 3.8

      - name: install dependencies
        run: |
          python -m install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: check pep8
        run: python -m flake8

      - name: run included tests
        run: pytest

  build_push_dockerhub:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: build
        uses: docker/setup-buildx-action@v1

      - name: login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: kv1o/practicum-django:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_push_dockerhub
    steps:
      - uses: actions/checkout@v2

      - name: run app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo docker pull kv1o/practicum-django
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d

  success_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send success message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!